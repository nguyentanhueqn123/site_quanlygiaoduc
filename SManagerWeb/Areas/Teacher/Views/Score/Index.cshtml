
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Teacher/Views/Shared/_Layout.cshtml";
    <link href="~/Public/css/Organization/TimeTable.css" rel="stylesheet" type="text/css" />

    var Semesters = (List<Models.Semester>)ViewBag.Semesters;
    var Subjects = (List<Models.Subject>)ViewBag.Subjects;
    var typeScore = (List<Models.TypeScore>)ViewBag.TypeScore;

    var numberOfScore = typeScore.Count;
}
<style>
    tr > td {
        cursor: pointer;
    }
</style>

<div class="d-flex">
    <div class="bg-white p-3 w-100">
        <div class="d-flex justify-content-between">
            <div>
                <h1 class="title">Score</h1>
                <ul class="breadcrumbs">
                    <li><a href="#">Teacher</a></li>
                    <li class="divider"></li>
                    <li><a href="#" class="active">Score</a></li>
                </ul>
            </div>
        </div>

        <div class="">
            @if (typeScore != null)
            {
                <div class="content">
                    <div class="d-flex ms-auto me-0 mb-2" style="max-width: 600px;">
                        <select class="form-select me-2 " id="select-semester" onchange="ChangeSemesterFunc()">
                            <option value="none" selected disabled>-- Select semester --</option>
                            @foreach (var semester in Semesters)
                            {
                                <option value="@semester.IdSemester" data-year="@semester.IDYear">Semester: @semester.SemesterNum (@semester.SchoolYear.LastYear - @semester.SchoolYear.NextYear)</option>
                            }
                        </select>
                        <select class="form-select  me-2" id="select-class" onchange="ChangeClassFunc()">
                            <option value="none" selected disabled>-- Select class --</option>
                        </select>
                        <select class="form-select  me-2" id="select-subject" onchange="RenderStudentFunc()">
                            <option value="none" selected disabled>-- Select subject --</option>
                        </select>
                    </div>
                    <div>
                        <table id="table" class="table table-bordered sortable table-light p-2" style="width:100%">
                            <thead>
                                <tr class="type-score">
                                    <th>
                                        Full Name
                                    </th>
                                    @foreach (var item in typeScore)
                                    {
                                        <th data-id="@item.IDScoreType">@item.NameScore</th>
                                    }
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody id="table-body">
                                <tr></tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            }
            else
            {
                <h5>Please go to <b>Rules of score</b> to set score types.</h5>

            }

        </div>
    </div>
    <div>
        @Html.Partial("_ShortProfile", (Models.ViewModel.TeacherViewModel)ViewBag.Teacher)
    </div>
</div>
<div class="add-form-container">
    <div class="card card-body p-5 add-form">
        @using (Html.BeginForm("ChangeScoreList", "Organization", FormMethod.Post, new { @class = "form-change" }))
        {
            <div class="h5 form-detail">
                Scores of <i>Chính</i> at <b>Math</b>
            </div>
            <div>
                <input hidden type="text" name="IDStudent" class="IDStudent" />
                <input hidden type="text" name="IDSemester" class="IDSemester" />
                <input hidden type="text" name="IDSubject" class="IDSubject" />
                <input hidden type="text" name="IDClass" class="IDClass"/>
                @foreach (var item in typeScore)
                {
                    <div>
                        <div class="fw-bold">@item.NameScore</div>
                        <div>
                            <input type="number" class="form-control type_@item.IDScoreType" step="0.1" min="0" max="10" name="type_@item.IDScoreType" />
                        </div>
                    </div>
                }
                @if (ViewBag.Error == 1)
                {
                    <p class="text-danger">Your input score isn't valid.</p>
                }
                <div class="d-flex mt-4">
                    <button type="submit" class="btn btn-outline-success me-2 form-submit">Save Changes</button>
                    <a class="btn btn-outline-dark form-back" onclick="FormBack()">Back</a>
                </div>
            </div>
        }

    </div>
</div>

<script>
    var classes = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Classes));
    var numberOfScore = @Html.Raw(numberOfScore);
    var Subjects = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Subjects));
    var TypeScores = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(typeScore));

    const SelectClass = document.getElementById("select-class");
    const SelectSemester = document.getElementById("select-semester");
    const SelectSubject = document.getElementById("select-subject");
    const TableBody = document.getElementById("table-body");


    function ChangeSemesterFunc() {
        SelectClass.innerHTML = `<option value="none" selected disabled>-- Select class --</option>`;
        SelectSubject.innerHTML = `<option value="none" selected disabled>-- Select subject --</option>`;
        TableBody.innerHTML = "";

        classes.forEach(function (value, index, arr) {

            if (value.IDYear == SelectSemester.options[SelectSemester.selectedIndex].getAttribute("data-year")) {
                let option = document.createElement('option');
                option.innerHTML = value.Name;
                option.setAttribute("value", value.IDClass);
                SelectClass.appendChild(option);
            }

        });
    }

    function ChangeClassFunc() {
        TableBody.innerHTML = "";
        SelectSubject.innerHTML = `<option value="none" selected disabled>-- Select subject --</option>`;

        $.ajax({
            type: "GET",
            url: "@Url.Action("GetSubjectTeach")",
            data: { IDClass: SelectClass.value, IDSemester: SelectSemester.value },
            success: function (res) {
                var data = JSON.parse(res);
                console.log(data);
                data.forEach((value, index) => {
                    SelectSubject.innerHTML += `<option value="${value.IDSubject}">${value.SubjectName}</option>`;
                })
            },
            error: {

            }

        })
    }

    function RenderStudentFunc() {
        TableBody.innerHTML = "";

        $.ajax({
            type: "GET",
            url: "@Url.Action("GetScoreList")",
            data: { IDSubject: SelectSubject.value, IDClass: SelectClass.value, IDSemester: SelectSemester.value },
            success: function (res) {
                var data = JSON.parse(res);
                data.forEach(function (value, index) {
                    var tr = document.createElement("tr");
                    var nodeScore = document.getElementsByClassName(`type-score`)[0].children;
                    var average = 0;
                    for (let i = 0; i < numberOfScore + 2; i++) {

                        if (i == 0) {
                            var td = document.createElement("td");
                            td.innerHTML = value.StudentName;
                            tr.appendChild(td);
                        } else if (i == numberOfScore + 1) {
                            var td = document.createElement("td");
                            if (numberOfScore > 0) {
                                td.innerHTML = average / numberOfScore;
                            }
                            tr.appendChild(td);
                        } else {
                            var td = document.createElement("td");
                            td.setAttribute("data-student", `${value.IDStudent}`)
                            td.setAttribute("data-student-name", `${value.StudentName}`)
                            td.setAttribute("data-subject", `${SelectSubject.value}`)
                            td.setAttribute("data-subject-name", `${SelectSubject.value}`)
                            td.setAttribute("onclick", "FormOpen(this)")

                            if (value.ScoreDetails != null) {
                                if (value.ScoreDetails[0].IDScoreType == nodeScore[i].getAttribute("data-id")) {
                                    td.innerHTML = value.ScoreDetails[0].Score;
                                    average += value.ScoreDetails[0].Score;
                                    console.log(average);
                                    value.ScoreDetails.shift();

                                }
                            }
                            tr.appendChild(td);
                        }
                    }
                    TableBody.appendChild(tr);
                })
            },
            error: function (res) {
                console.log("error");
            }
        })
    }

    function FormBack() {
        $('.add-form-container').css("display", "none");
        $(".IDStudent").val("");
        $(".IDSemester").val("");
        $(".IDSubject").val("");
        $(".IDClass").val("");
        return false;
    }

    function FormOpen(target, event) {
        //display
        var studentName = target.getAttribute("data-student-name");
        var subjectName = target.getAttribute("data-subject-name");
        $(".form-detail").html(`Scores of <i>${studentName}</i> at <b>${subjectName}</b>`)

        //data
        var studentID = target.getAttribute("data-student");
        var subjectID = target.getAttribute("data-subject");
        var semesterID = $("#select-semester").val();

        $(".IDStudent").val(studentID);
        $(".IDSemester").val(semesterID);
        $(".IDSubject").val(subjectID);
        $(".IDClass").val(SelectClass.value);


        $.ajax({
            type: 'GET',
            url: '@Url.Action("GetScoreListStudent")',
            data: { ID: `@ViewBag.OrganizationID`, IDStudent: studentID, IDSemester: semesterID, IDSubject: subjectID},
            success: function (res, textStatus, xhr) {
                if (xhr.status == 200) {
                    var data = JSON.parse(res);
                    TypeScores.forEach((value, index) => {
                        if (data[index] != null)
                            $(`.type_${value.IDScoreType}`).val(data[index].Score);
                        else
                            $(`.type_${value.IDScoreType}`).val("");
                    })
                }
                else {
                    console.log("error");
                }

            },
            error: function (res) {
                console.log(res)

            }
        })


        $('.add-form-container').css("display", "block");

        return false;
    }
    $(".form-change").on("submit",function(e) {
        //var studentID = $(".student-id").val();
        //var subjectID = $(".subject-id").val();
        //var semesterID = $("#select-semester").val();
        var dataString = $(this).serialize();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ChangeScoreList")',
            data: dataString,

            success: function (res, textStatus, xhr) {
                if (xhr.status == 200) {
                    console.log("OK")
                    $('.add-form-container').css("display", "none");
                    RenderStudentFunc();
                }
                else {
                    console.log("Not ok")

                }

            },
            error: function (res) {
                console.log(res)
                console.log("Error");
            }
        })


        e.preventDefault();
    })
</script>